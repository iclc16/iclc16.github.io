install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
R.version
R.version
installed.packages()
remotes::install_github("hartmast/concordances")
remotes::install_github("hartmast/wizard")
library(tidyverse)
library(MASS)
nettle <- read_csv("/Users/stefanhartmann/Library/CloudStorage/Dropbox/Privat/r_tests/bodobuch/applied_statistics_book_data-master/nettle_1999_climate.csv")
MGS_mdl <- glm(Langs ~ MGS, data = nettle, family = "Poisson")
MGS_mdl <- glm(Langs ~ MGS, data = nettle, family = "poisson")
tidy(MGS_mdl)
library(tidyverse)
?tidy
tidy(MGS_mdl)
library(MASS)
MGS_mdl
MGS_mdl %>% tidy
tidy
tidy()
library(broom)
tidy(MGS_mdl)
MGS_mdl <- glm(Langs ~ MGS + offset(Area), data = nettle, family = "poisson")
tidy(MGS_mdl)
mycoefs <- tidy(MGS_mdl)$estimate
intercept <- mycoefs[1]
slope <- mycoefs[2]
mycoefs
intercept + 0:12 * slope
exp(intercept + 0:12 * slope)
MGS_mdl <- glm.nb(Langs ~ MGS + offset(Area), data = nettle)
tidy(MGS_mdl)
summary(MGS_mdl)
library(effects)
install.packages("effects")
library(effects)
library(effects)
allEffects(MGS_mdl)
summary(MGS_mdl)
install.packages("foreign")
library(foreign)
dat <- read.dta("https://stats.idre.ucla.edu/stat/stata/dae/nb_data.dta")
dat <- within(dat, {
prog <- factor(prog, levels = 1:3, labels = c("General", "Academic", "Vocational"))
id <- factor(id)
})
dat
?within
summary(dat)
ggplot(dat, aes(daysabs, fill = prog)) + geom_histogram(binwidth = 1) + facet_grid(prog ~
., margins = TRUE, scales = "free")
with(dat, tapply(daysabs, prog, function(x) {
sprintf("M (SD) = %1.2f (%1.2f)", mean(x), sd(x))
}))
summary(m1 <- glm.nb(daysabs ~ math + prog, data = dat))
install.packages("psc1")
library(pscl)
install.packages("pscl")
library(pscl)
odTest(m1)
summary(m1)
m2 <- update(m1, . ~ . - prog)
anova(m1, m2)
pchisq(2 * (logLik(m1) - logLik(m3)), df = 1, lower.tail = FALSE)
m3 <- glm(daysabs ~ math + prog, family = "poisson", data = dat)
pchisq(2 * (logLik(m1) - logLik(m3)), df = 1, lower.tail = FALSE)
(est <- cbind(Estimate = coef(m1), confint(m1)))
exp(est)
newdata1 <- data.frame(math = mean(dat$math), prog = factor(1:3, levels = 1:3,
labels = levels(dat$prog)))
newdata1$phat <- predict(m1, newdata1, type = "response")
newdata1
newdata2 <- within(newdata2, {
DaysAbsent <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
newdata2 <- data.frame(
math = rep(seq(from = min(dat$math), to = max(dat$math), length.out = 100), 3),
prog = factor(rep(1:3, each = 100), levels = 1:3, labels =
levels(dat$prog)))
newdata2 <- cbind(newdata2, predict(m1, newdata2, type = "link", se.fit=TRUE))
newdata2 <- within(newdata2, {
DaysAbsent <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(newdata2, aes(math, DaysAbsent)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = prog), alpha = .25) +
geom_line(aes(colour = prog), size = 2) +
labs(x = "Math Score", y = "Predicted Days Absent")
ggplot(newdata2, aes(math, DaysAbsent)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = prog), alpha = .25) +
geom_line(aes(colour = prog), linewidth = 2) +
labs(x = "Math Score", y = "Predicted Days Absent")
dlls <- getLoadedDLLs()
paths <- vapply(dlls, `[[`, "path", FUN.VALUE = character(1))
invisible(lapply(paths, function(path) {
if (!file.exists(path))
return(FALSE)
output <- system(paste("otool -L", shQuote(path), "| grep libc++ || true"),
intern = TRUE)
if (length(output) == 0)
return(FALSE)
writeLines(paste0(path, ":"))
writeLines(output)
}))
paths
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages(c("remotes", "Rcpp", "RcppArmadillo")
)
install.packages("Rcpp")
library(Rcpp)
sourceCpp("/Users/stefanhartmann/Downloads/helloworld.cpp")
install.packages("RcppArmadillo")
sourceCpp("/Users/stefanhartmann/Downloads/helloworld.cpp")
Rcpp::sourceCpp('path/to/file/helloworld.cpp')
Rcpp::sourceCpp('/Users/stefanhartmann/Downloads/helloworld.cpp')
cmdstanr::install_cmdstan()
install.packages("cmdstandr")
install.packages("cmdstanr")
install.packages("cmdstanr")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(cmdstanr)
?install_cmdstan
install_cmdstan()
install_cmdstan()
install_cmdstan(overwrite = TRUE)
check_cmdstan_toolchain()
cmdstan_version()
cmdstanr::rebuild_cmdstan()
system("touch foo.cpp && R CMD SHLIB foo.cpp")
cmdstanr::rebuild_cmdstan()
system("touch foo.cpp && R CMD SHLIB foo.cpp")
system("touch foo.cpp && R CMD SHLIB foo.cpp")
cmdstanr::rebuild_cmdstan()
cmdstanr::install_cmdstan()
cmdstanr::cmdstanr_example()
file.edit("~/.Renviron")
#include <Rcpp.h>
using namespace std;
Rcpp::cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
unlink("~/.R/Makevars")
unlink("~/.Renviron")
Rcpp::evalCpp("1+1")
Rcpp::Rcpp.package.skeleton("SOanswer", example_code = FALSE)
Rcpp::compileAttributes("SOanswer/")
?link
?unlink
Rcpp::evalCpp("1+1")
library(cmdstanr)
cmdstanr_example()
remove.packages("Rstan")
remove.packages("cmdstanr")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
library(posterior)
library(bayesplot)
install.packages("bayesplot")
library(bayesplot)
color_scheme_set("brightblue")
check_cmdstan_toolchain()
install_cmdstan(cores = 2)
cmdstan_path()
cmdstan_version()
file <- file.path(cmdstan_path(), "examples", "bernoulli", "bernoulli.stan")
mod <- cmdstan_model(file)
cmdstanr::install_cmdstan()
?cmdstanr::install_cmdstan()
?cmdstanr::install_cmdstan(overwrite = TRUE)
cmdstanr::rebuild_cmdstan()
Rcpp::sourceCpp("/Users/stefanhartmann/Downloads/helloworld.cpp")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
arch <- ifelse(R.version$arch == "aarch64", "arm64", "x86_64")
cat(paste("\nCXX14FLAGS += -O3 -mtune=native -arch", arch, "-ftemplate-depth-256"),
file = M, sep = "\n", append = FALSE)
remove.packages("rstan")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
remotes::install_github("stan-dev/rstan", subdir = "rstan/rstan")
install.packages("rstan")
library(rstan)
example(stan_model, package = "rstan", run.dontrun = TRUE)
file.edit("~/.Renviron")
8*35
23280+0.19*23280
7.6*5
14.40*2
109*3
49.9/1.5
341/6
3000/681.71
681.71*4
533*3
75+60
681.76*4
681.76*5
85+54+1+28+1+29+2+3+11
install.packages("pscl")
library(tidyverse)
library(DT)
library(readxl)
library(googlesheets4)
#tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
tbl <- read_xlsx("Talks.xlsx", sheet = "Talks")
setwd("~/")
setwd("~/sciebo/Projekte/ICLC16/githubpage")
#tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
tbl <- read_xlsx("Talks.xlsx", sheet = "Talks")
# tbl <- read_xlsx("by_author.xlsx")
# tbl$Decision %>% unique
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl <- select(tbl, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`)
tbl$Title <- paste0("<a href=\"", tbl$Link, "\">", tbl$Title, "</a>")
tbl
#tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
tbl <- read_xlsx("Talks.xlsx", sheet = "Talks")
tbl$Decision
tbl$Decision %>% unique
tbl %>% filter(Decision != "reject")
tbl %>% filter(Decision != "reject" & !is.na(Decision))
566+6
library(tidyverse)
library(DT)
library(readxl)
library(googlesheets4)
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
gs4_deauth()
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
tbl$livestream
tbl$id
# tbl <- read_xlsx("Talks.xlsx", sheet = "Talks")
# tbl <- read_xlsx("by_author.xlsx")
# tbl$Decision %>% unique
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
tbl$Title <- paste0("<a href=\"", tbl$Link, "\">", tbl$Title, "</a>")
tbl
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
tbl %>% group_by("scheduled for" "scheduled time", "scheduled room")
tbl %>% group_by("scheduled for", "scheduled time", "scheduled room")
?group_by
tbl %>% arrange("scheduled room") %>% arrange("scheduled for") %>% arrange("scheduled time")
tbl %>% arrange("scheduled room") %>% arrange("scheduled time") %>% arrange("scheduled for")
tbl$`scheduled room`
grep(paste0("Session ", 1), tbl$`scheduled room`)
days
tbl$`scheduled for`
weekdays()
?weekdays
weekdays(1)
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
grep(paste0("Session ", 1), tbl$`scheduled room`)
setwd("~/sciebo/Projekte/ICLC16/githubpage")
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),]
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),] %>% filter("scheduled for" == week_days[1])
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),] %>% filter("scheduled for" == "Monday")
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),]
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1])
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`)
tbl[grep(paste0("Session ", 1), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% View()
tbl[grep(paste0("Session ", 1, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% View()
tbl[grep(paste0("Session ", 1, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)")
tbl[grep(paste0("Session ", 1, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "title", "scheduled time", "Livestream")
tbl[grep(paste0("Session ", 1, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- tbl[-which(is.na(tbl$id)),]
warnings()
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- tbl[-which(is.na(tbl$id)),]
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
tbl$Title <- paste0("<a href=\"", tbl$Link, "\">", tbl$Title, "</a>")
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
tbl[grep(paste0("Session ", 1, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[1]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
print("week_days"[1])
print(week_days[1])
print(paste0(week_days[1], " Session", 1))
print(paste0(week_days[1], " Session ", 1))
DT::datatable(tbl)
tbl$`scheduled for`
for(i in 1:length(week_days)) {
for(j in 1:14) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
if(j == 1) {
write.table(cur_tbl, file = paste0("Session", j, ".csv"))
} else {
write.table(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
}
}
}
for(j in 1:14) {
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
if(j == 1) {
write.table(cur_tbl, file = paste0("Session", j, ".csv"))
} else {
write.table(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
}
}
}
warnings()
j = 1
i = 1
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
if(j == 1) {
write.table(cur_tbl, file = paste0("Session", j, ".csv"))
} else {
write.table(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
}
for(j in 1:14) {
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
if(i == 1) {
write.table(cur_tbl, file = paste0("Session", j, ".csv"))
} else {
write.table(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
}
}
}
library(writexl)
?write_xlsx
?write_xlsx()
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
if(i == length(week_days)) {
write_xlsx(all_in_session, file = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
}
all_in_session <- list()
all_in_session <- list()
j = 1
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
all_in_session
write_xlsx(all_in_session, file = paste0("Session", j, ".xlsx"))
write_xlsx()
names(all_in_session) <- week_days
write_xlsx(all_in_session, file = paste0("Session", j, ".xlsx"))
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
tbl$Title
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- tbl[-which(is.na(tbl$id)),]
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled for", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
names(all_in_session) <- week_days
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
names(all_in_session) <- week_days
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- tbl[-which(is.na(tbl$id)),]
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl$Livestream <- ifelse(tbl$Decision == "talk (remote)", tbl$Livestream = "remote", tbl$Livestream)
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
names(all_in_session) <- week_days
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
tbl$Livestream
tbl$Livestream %>% unique
tbl
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
# backup
tbl2 <- tbl
tbl <- tbl[-which(is.na(tbl$id)),]
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
ifelse(tbl$Decision == "talk (remote)", tbl$Livestream = "remote", tbl$Livestream)
tbl$Livestream <- ifelse(tbl$Decision == "talk (remote)", "remote", tbl$Livestream)
ifelse(tbl$Decision == "talk (remote)", tbl$Livestream = "remote", tbl$Livestream))
ifelse(tbl$Decision == "talk (remote)", "remote", tbl$Livestream)
tbl <- tbl2
tbl <- tbl[-which(is.na(tbl$id)),]
tbl <- tbl2
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
# backup
tbl2 <- tbl
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl$Livestream <- ifelse(tbl$Decision == "talk (remote)", "remote", tbl$Livestream)
tbl$livestream <- ifelse(tbl$Decision == "talk (remote)", "remote", tbl$livestream)
tbl$livestream
tbl$livestream <- ifelse(tbl$Decision == "talk (remote)", "remote", tbl$livestream)
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
names(all_in_session) <- week_days
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
tbl <- read_sheet("https://docs.google.com/spreadsheets/d/1M5ZaoYkOrl0PQf3JbWwEz9GYVEwyXPWISGmhIGPSUAQ/edit?usp=sharing", sheet = "Talks")
# backup
tbl2 <- tbl
# ignore empty lines
tbl$id <- unlist(sapply(1:nrow(tbl), function(i) ifelse(is.null(unlist(tbl$id[i])), NA, tbl$id[i])))
tbl <- filter(tbl, Decision %in% c("talk", "talk (remote)", "talk (maybe remote)"))
tbl$livestream <- ifelse(tbl$Decision == "talk (remote)", "remote", tbl$livestream)
tbl <- select(tbl, id, "Last_Name_first_author", Authors, Title, "scheduled_for", "scheduled_time", "scheduled_room", Link, `Theme session`, livestream)
colnames(tbl) <- c("Easychair ID", "Last_Name_first_author", "Author(s)", "Title", "scheduled for", "scheduled time", "scheduled room", "Link", "Theme session", "Livestream")
week_days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
for(j in 1:14) {
all_in_session <- list()
for(i in 1:length(week_days)) {
print(paste0(week_days[i], " Session ", j))
cur_tbl <- tbl[grep(paste0("Session ", j, " "), tbl$`scheduled room`),] %>% filter(`scheduled for` == week_days[i]) %>% arrange(`scheduled time`) %>% select(`Easychair ID`, "Author(s)", "Title", "scheduled time", "Livestream")
all_in_session[[i]] <- cur_tbl
# if(i == 1) {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"))
# } else {
#   write_xlsx(cur_tbl, file = paste0("Session", j, ".csv"), append = T)
# }
}
names(all_in_session) <- week_days
write_xlsx(x = all_in_session, path = paste0("Session", j, ".xlsx"))
rm(all_in_session)
}
